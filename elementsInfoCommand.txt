Is Displayed
This method is used to check if the connected Element is displayed on a webpage. Returns a Boolean value, True if the connected element is displayed in the current browsing context else returns false.
    // Resolves Promise and returns boolean value
    let result =  await driver.findElement(By.name("email_input")).isDisplayed();

Is Enabled
This method is used to check if the connected Element is enabled or disabled on a webpage. Returns a boolean value, True if the connected element is enabled in the current browsing context else returns false.
    // Resolves Promise and returns boolean value
    let element =  await driver.findElement(By.name("button_input")).isEnabled();

Is Selected
This method determines if the referenced Element is Selected or not. This method is widely used on Check boxes, radio buttons, input elements, and option elements.

Returns a boolean value, True if referenced element is selected in the current browsing context else returns false.
    // Returns true if element ins checked else returns false
    let isSelected = await driver.findElement(By.name("checkbox_input")).isSelected();

Tag Name
It is used to fetch the TagName of the referenced Element which has the focus in the current browsing context.
    // Returns TagName of the element
    let value = await driver.findElement(By.name('email_input')).getTagName();

Size and Position
It is used to fetch the dimensions and coordinates of the referenced element.

The fetched data body contain the following details:

X-axis position from the top-left corner of the element
y-axis position from the top-left corner of the element
Height of the element
Width of the element
    let object = await driver.findElement(By.name('range_input')).getRect();

Get CSS Value
Retrieves the value of specified computed style property of an element in the current browsing context.
    await driver.get('https://www.selenium.dev/selenium/web/colorPage.html');
      // Returns background color of the element
      let value = await driver.findElement(By.id('namedColor')).getCssValue('background-color');

Text Content
Retrieves the rendered text of the specified element.
    await driver.get('https://www.selenium.dev/selenium/web/linked_image.html');
    // Returns text of the element
    let text = await driver.findElement(By.id('justanotherLink')).getText();

Fetching Attributes or Properties
Fetches the run time value associated with a DOM attribute. It returns the data associated with the DOM attribute or property of the element.
    // identify the email text box
    const emailElement = await driver.findElement(By.xpath('//input[@name="email_input"]'));
    
    //fetch the attribute "name" associated with the textbox
    const nameAttribute = await emailElement.getAttribute("name");


    BROWSER INTERACTIONS
 Get title
You can read the current page title from the browser:
      let title = await driver.getTitle();

Get current URL
You can read the current URL from the browserâ€™s address bar using:
    let currentUrl = await driver.getCurrentUrl();

